//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankOfIntern.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BOIFinalDBEntities : DbContext
    {
        public BOIFinalDBEntities()
            : base("name=BOIFinalDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountMaster> AccountMasters { get; set; }
        public virtual DbSet<AdminLogin> AdminLogins { get; set; }
        public virtual DbSet<Beneficiary> Beneficiaries { get; set; }
        public virtual DbSet<BranchTable> BranchTables { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<NewAcc> NewAccs { get; set; }
        public virtual DbSet<TransTable> TransTables { get; set; }
    
        public virtual ObjectResult<GetAcStatement_Result> GetAcStatement(Nullable<decimal> userId, Nullable<System.DateTime> transDate1, Nullable<System.DateTime> transDate2)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            var transDate1Parameter = transDate1.HasValue ?
                new ObjectParameter("TransDate1", transDate1) :
                new ObjectParameter("TransDate1", typeof(System.DateTime));
    
            var transDate2Parameter = transDate2.HasValue ?
                new ObjectParameter("TransDate2", transDate2) :
                new ObjectParameter("TransDate2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAcStatement_Result>("GetAcStatement", userIdParameter, transDate1Parameter, transDate2Parameter);
        }
    
        public virtual ObjectResult<GetAcSummary_Result> GetAcSummary(Nullable<decimal> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAcSummary_Result>("GetAcSummary", userIdParameter);
        }
    
        public virtual ObjectResult<GetBranchDetails_Result> GetBranchDetails(Nullable<decimal> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBranchDetails_Result>("GetBranchDetails", userIdParameter);
        }
    
        public virtual ObjectResult<string> GetEmail(Nullable<decimal> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEmail", userIdParameter);
        }
    
        public virtual ObjectResult<string> GetEmail2(Nullable<decimal> accNo)
        {
            var accNoParameter = accNo.HasValue ?
                new ObjectParameter("AccNo", accNo) :
                new ObjectParameter("AccNo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEmail2", accNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoginCheck(Nullable<decimal> userId, string pwd)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoginCheck", userIdParameter, pwdParameter);
        }
    
        public virtual ObjectResult<MailingDet_Result> MailingDet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MailingDet_Result>("MailingDet");
        }
    
        public virtual ObjectResult<TransDetails_Result> TransDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransDetails_Result>("TransDetails");
        }
    
        public virtual int UpdatePwd(Nullable<decimal> userId, string newpwd)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            var newpwdParameter = newpwd != null ?
                new ObjectParameter("newpwd", newpwd) :
                new ObjectParameter("newpwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePwd", userIdParameter, newpwdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ValidIdVerify(Nullable<decimal> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ValidIdVerify", userIdParameter);
        }
    
        public virtual ObjectResult<ViewCustomer_List_Result> ViewCustomer_List(string branchName)
        {
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewCustomer_List_Result>("ViewCustomer_List", branchNameParameter);
        }
    
        public virtual ObjectResult<ViewUserDetails_Result> ViewUserDetails(Nullable<decimal> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewUserDetails_Result>("ViewUserDetails", userIdParameter);
        }
    }
}
